name: Artifacts

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  upload:
    runs-on: ${{ matrix.config.os }}

    permissions:
      contents: write

    strategy:
      fail-fast: true

      matrix:
        config:
          - name: macOS
            os: macos-latest
          - name: Ubuntu
            os: ubuntu-latest
          - name: WebAssembly
            os: ubuntu-latest
          - name: Windows
            os: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.conan2/p
            ~\.conan/p
          key: ${{ matrix.config.name }}-${{ hashFiles('**/conanfile.txt') }}

      - name: Prepare Build Directory
        run: mkdir build

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "stable"
          cache: false

      - name: Install Conan
        run: pip install conan

      - name: Detect Conan Profile
        run: conan profile detect --force

      - name: Detect WebAssembly Conan Profile
        if: matrix.config.name == 'WebAssembly'
        run: |
          cat > ~/.conan2/profiles/webassembly <<EOF
          include(default)

          [settings]
          arch=wasm
          os=Emscripten

          [tool_requires]
          *: emsdk/3.1.44
          EOF

      - name: Install Ubuntu Dependencies
        if: matrix.config.name == 'Ubuntu'
        run: sudo apt-get install -y libegl-dev libegl1-mesa-dev libva-dev libvdpau-dev libx11-xcb-dev libfontenc-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxfixes-dev libxi-dev libxinerama-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxres-dev libxss-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev libxcb-dri3-dev libxcb-cursor-dev libxcb-util-dev

      - name: Install Dependencies
        if: matrix.config.name != 'WebAssembly'
        run: conan install ..  --output-folder=. --build="*" --settings compiler.cppstd=17 --settings build_type=Release
        working-directory: build

      - name: Install WebAssembly Dependencies
        if: matrix.config.name == 'WebAssembly'
        run: conan install ..  --output-folder=. --build="*" --profile=webassembly --settings compiler.cppstd=17 --settings build_type=Release
        working-directory: build

      - name: Configure
        run: cmake .. -DCMAKE_TOOLCHAIN_FILE="conan_toolchain.cmake" -DCMAKE_BUILD_TYPE=Release
        working-directory: build

      - name: Build
        run: cmake --build . --config Release --verbose
        working-directory: build

      # - name: Copy Windows Binary
      #   if: matrix.config.name == 'Windows'
      #   run: cp Release/carimbo.exe .
      #   working-directory: build

      - name: Create Artifacts Directory
        working-directory: build
        run: mkdir artifacts

      - name: Compress Artifacts
        if: matrix.config.name == 'macOS'
        working-directory: build
        run: |
          chmod +x carimbo
          tar -czvf macOS.tar.gz --mode='a+rwx' carimbo
          rm -rf carimbo
          mv macOS.tar.gz artifacts

      - name: Compress Artifacts
        if: matrix.config.name == 'Ubuntu'
        working-directory: build
        run: |
          chmod +x carimbo
          tar -czvf Ubuntu.tar.gz --mode='a+rwx' carimbo
          rm -rf carimbo
          mv Ubuntu.tar.gz artifacts

      - name: Compress Artifacts
        if: matrix.config.name == 'WebAssembly'
        working-directory: build
        run: |
          zip -jr WebAssembly.zip carimbo.wasm carimbo.js
          rm -rf carimbo.wasm carimbo.js
          mv WebAssembly.zip artifacts

      - name: Compress Artifacts
        if: matrix.config.name == 'Windows'
        working-directory: build
        run: |
          zip -jr Windows.zip carimbo.exe
          rm -rf carimbo.exe
          mv Windows.zip artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        if: startsWith(github.ref, 'refs/tags/')
        with:
          if-no-files-found: error
          name: ${{ matrix.config.name }}
          path: build/artifacts

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v3
      #   if: matrix.config.name == 'macOS' || matrix.config.name == 'Ubuntu'
      #   with:
      #     if-no-files-found: error
      #     name: ${{ matrix.config.name }}
      #     path: build/carimbo

      # - name: Upload Artifact
      #   uses: actions/upload-artifact@v3
      #   if: matrix.config.name == 'Windows'
      #   with:
      #     if-no-files-found: error
      #     name: ${{ matrix.config.name }}
      #     path: build/Release/carimbo.exe

      # - name: Upload WebAssembly Artifact
      #   uses: actions/upload-artifact@v3
      #   if: matrix.config.name == 'WebAssembly'
      #   with:
      #     if-no-files-found: error
      #     name: ${{ matrix.config.name }}
      #     path: |
      #       build/carimbo.js
      #       build/carimbo.wasm

  # upload:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   steps:
  #     - name: Download Artifact
  #       uses: actions/download-artifact@v3
  #       with:
  #         path: artifacts

  #     - name: Compress Artifacts
  #       run: |
  #         if [ -d macOS ]; then
  #           chmod +x macOS/carimbo
  #           tar -C macOS -czvf macOS.tar.gz --mode='a+rwx' carimbo
  #           rm -rf macOS
  #         fi

  #         if [ -d Ubuntu ]; then
  #           chmod +x Ubuntu/carimbo
  #           tar -C Ubuntu -czvf Ubuntu.tar.gz --mode='a+rwx' carimbo
  #           rm -rf Ubuntu
  #         fi

  #         if [ -d WebAssembly ]; then
  #           zip -jr WebAssembly.zip WebAssembly/carimbo.wasm WebAssembly/carimbo.js
  #           rm -rf WebAssembly
  #         fi

  #         if [ -d Windows ]; then
  #           zip -jr Windows.zip Windows/carimbo.exe
  #           rm -rf Windows
  #         fi
  #       working-directory: artifacts

  #     - name: Upload Artifacts
  #       uses: softprops/action-gh-release@v1
  #       if: startsWith(github.ref, 'refs/tags/')
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: ${{ github.event.inputs.tagName }}
  #         prerelease: ${{ github.events.inputs.prerelease }}
  #         files: artifacts/*
